Para todas as questões abaixo, utilize o modo de comparação do Timer A.

void ConfigPWM(volatile unsigned int freqs, volatile unsigned char ciclo_de_trabalho)
{
	unsigned int T = 500000/f; //T em us.
	
	//Carrega o período da onda em us para contagem no Timer.
	TACCR0 = T-1;
	//Calcula ciclo de trabalho baseado na entrada.
	TACCR1 = (_ciclo_de_trabalho*T/100)-1;
	TACCTL1 = OUTMOD_7; // Modo reset/set para saída da comparação.
    // Entrada de clock é SMCLK dividido por 2 em modo UP.
    TACTL = TASSEL_2 + ID_1 + MC_1;
}

1. Para os itens abaixo, confira a diferença no brilho do LED. 
(a) Pisque o LED no pino P1.6 numa frequência de 100 Hz e ciclo de trabalho de 25%.

    ConfigPWM(100,25);

(b) Pisque o LED no pino P1.6 numa frequência de 100 Hz e ciclo de 
    trabalho de 50%. 
    
    ConfigPWM(100,25);
    
(c) Pisque o LED no pino P1.6 numa frequência de 100 Hz e ciclo de trabalho de 75%.

    ConfigPWM(100,25);

2. Pisque o LED no pino P1.6 numa frequência de 1 Hz e ciclo de trabalho de 25%.
    
    void ConfigPwm1Hz(volatile unsigned int ciclo)
{
	TACCR0 = 62500-1;
	TACCR1 = (ciclo*62500/100)-1;
	TACCTL1 = OUTMOD_4; //Modo Toggle para dobrar período
	TACTL = TASSEL_2 + ID_3 + MC_3;
}

    ConfigPWM(25);

3. Pisque o LED no pino P1.6 numa frequência de 1 Hz e ciclo de trabalho de 50%.

    ConfigPWM(50);

4. Pisque o LED no pino P1.6 numa frequência de 1 Hz e ciclo de trabalho de 75%.

    onfigPWM(75);
