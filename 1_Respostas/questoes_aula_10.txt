1. Projete o hardware necessário para o MSP430 controlar um motor DC de 12V e 4A. Utilize transistores bipolares 
de junção (TBJ) com Vbe = 0,7 V, beta = 100 e Vce(saturação) = 0,2 V. Além disso, considere que Vcc = 3 V para o 
MSP430, e que este não pode fornecer mais do que 10 mA por porta digital.

Para este caso, a solução é usar o par de Darlington

ib = ic/(beta)^2 => ib = 4000mA/10000 = 0,4mA
Rb = (Vcc - 2*Vbe)/ib = (3-1,4)/0,4 = 4kOhm

2. Projete o hardware necessário para o MSP430 controlar um motor DC de 10V e 1A. Utilize transistores bipolares de 
junção (TBJ) com Vbe = 0,7 V e beta = 120. Além disso, considere que Vcc = 3,5 V para o MSP430, e que este não pode 
fornecer mais do que 10 mA por porta digital.

ib = ic/beta => ib = 1000/120 = 8,33mA
Rb = (Vcc - Vbe)/ib = (3,5 - 0,7)/8,33 = 336Ohm

3. Projete o hardware utilizado para controlar 6 LEDs utilizando charlieplexing. Apresente os pinos utilizados no 
MSP430 e os LEDs, nomeados L1-L6.

Por charlieplexing, podemos controlar com N pinos, N(N-1) leds. Para o caso da questão, podemos controlar 6 leds usando 
3 portas da MSP430. Portas P1.0, P1.1 e P1.2. Leds L1, L2, L3, L4, L5, L6.

Para acender L1 => 
        P1.0 = entrada
        P1.1 = 1
        P1.2 = 0
 
 Para acender L2 => 
        P1.0 = entrada
        P1.1 = 0
        P1.2 = 1
        
Para acender L3 => 
        P1.0 = 1
        P1.1 = 0
        P1.2 = entrada
        
Para acender L4 => 
        P1.0 = 0
        P1.1 = 1
        P1.2 = entrada
                
Para acender L5 => 
        P1.0 = 1
        P1.1 = entrada
        P1.2 = 0

Para acender L6 => 
        P1.0 = 0
        P1.1 = entrada
        P1.2 = 1
        
4. Defina a função void main(void){} para controlar 6 LEDs de uma árvore de natal usando o hardware da questão anterior. 
Acenda os LEDs de forma que um ser humano veja todos acesos ao mesmo tempo.



5. Defina a função void main(void){} para controlar 6 LEDs de uma árvore de natal usando o hardware da questão 3. 
Acenda os LEDs de forma que um ser humano veja os LEDs L1 e L2 acesos juntos por um tempo, depois os LEDs L3 e L4 
juntos, e depois os LEDs L5 e L6 juntos.

6. Defina a função void EscreveDigito(volatile char dig); que escreve um dos dígitos 0x0-0xF em um único display de 7 
segmentos via porta P1, baseado na figura abaixo. Considere que em outra parte do código os pinos P1.0-P1.6 já foram 
configurados para corresponderem aos LEDs A-G, e que estes LEDs possuem resistores externos para limitar a corrente.

        ---  ==> A
       |   |
 F <== |   | ==> B
       |   |
        ---  ==> G
       |   |
 E <== |   | ==> C
       |   |
        ---  ==> D
7. Multiplexe 2 displays de 7 segmentos para apresentar a seguinte sequência em loop: 
00 - 11 - 22 - 33 - 44 - 55 - 66 - 77 - 88 - 99 - AA - BB - CC - DD - EE - FF
